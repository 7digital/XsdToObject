using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;

namespace AutoGenerated
{
	public class Vehicles
	{
		public IList<Car> Cars { get; set; }

		public Vehicles(XElement element)
		{
			Cars = element.Elements().Where(e => e.Name == "car").Select(e => new Car(e)).ToList();
		}

		public Vehicles()
		{ }
	}

	public class Color
	{
		public string Hue { get; set; }
		public string Rgb { get; set; }
		public Title_x Title { get; set; }
		public LabelName_x LabelName { get; set; }

		public Color(XElement element)
		{
			Hue = element.Elements().Where(e => e.Name == "hue").Select(e => e.Value).SingleOrDefault();
			Rgb = element.Elements().Where(e => e.Name == "rgb").Select(e => e.Value).SingleOrDefault();
			Title = element.Elements().Where(e => e.Name == "Title").Select(e => new Title_x(e)).SingleOrDefault();
			LabelName = element.Elements().Where(e => e.Name == "LabelName").Select(e => new LabelName_x(e)).SingleOrDefault();
		}

		public Color()
		{ }
	}

	public class Car
	{
		public string Brand { get; set; }
		public Color Color { get; set; }

		public Car(XElement element)
		{
			Brand = element.Elements().Where(e => e.Name == "brand").Select(e => e.Value).SingleOrDefault();
			Color = element.Elements().Where(e => e.Name == "color").Select(e => new Color(e)).SingleOrDefault();
		}

		public Car()
		{ }
	}

	public class Title_x
	{
		public string TitleText { get; set; }
		public IList<string> SubTitles { get; set; }
		public string LanguageAndScriptCode { get; set; }
		public string TitleType { get; set; }

		public Title_x(XElement element)
		{
			TitleText = element.Elements().Where(e => e.Name == "TitleText").Select(e => e.Value).SingleOrDefault();
			SubTitles = element.Elements().Where(e => e.Name == "SubTitle").Select(e => e.Value).ToList();
			LanguageAndScriptCode = element.Attributes().Where(a=>a.Name=="LanguageAndScriptCode").Select(a=>a.Value).FirstOrDefault();
			TitleType = element.Attributes().Where(a=>a.Name=="TitleType").Select(a=>a.Value).FirstOrDefault();
		}

		public Title_x()
		{ }
	}

	public class LabelName_x
	{
		public override string ToString(){return Value;}
		public static implicit operator string(LabelName_x obj){return obj.Value;}

		public string Value { get; set; }
		public string LanguageAndScriptCode { get; set; }
		public string LabelNameType { get; set; }

		public LabelName_x(XElement element)
		{
			Value = element.Value;
			LanguageAndScriptCode = element.Attributes().Where(a=>a.Name=="LanguageAndScriptCode").Select(a=>a.Value).FirstOrDefault();
			LabelNameType = element.Attributes().Where(a=>a.Name=="LabelNameType").Select(a=>a.Value).FirstOrDefault();
		}

		public LabelName_x()
		{ }
	}

}